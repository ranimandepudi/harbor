// Code generated by mockery v2.1.0. DO NOT EDIT.

package model

import (
	model "github.com/goharbor/harbor/src/pkg/accessory/model"
	mock "github.com/stretchr/testify/mock"
)

// Accessory is an autogenerated mock type for the Accessory type
type Accessory struct {
	mock.Mock
}

// Display provides a mock function with given fields:
func (_m *Accessory) Display() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// GetData provides a mock function with given fields:
func (_m *Accessory) GetData() model.AccessoryData {
	ret := _m.Called()

	var r0 model.AccessoryData
	if rf, ok := ret.Get(0).(func() model.AccessoryData); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(model.AccessoryData)
	}

	return r0
}

// IsHard provides a mock function with given fields:
func (_m *Accessory) IsHard() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// IsSoft provides a mock function with given fields:
func (_m *Accessory) IsSoft() bool {
	ret := _m.Called()

	var r0 bool
	if rf, ok := ret.Get(0).(func() bool); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// Kind provides a mock function with given fields:
func (_m *Accessory) Kind() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
